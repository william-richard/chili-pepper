image: python:3.7-stretch

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: fake_key
  AWS_SECRET_ACCESS_KEY: fake_secret

stages:
  - test
  - deploy

lint:
  stage: test
  script:
    - pip install -r requirements_lint.txt
    - black --check --diff .
    - flake8

test:2.7:
  image: python:2.7-stretch
  stage: test
  services:
    - docker:dind
  before_script:
    - curl -fsSL https://get.docker.com | bash
    - pip install --no-use-pep517 -e  .
  script:
    - pip install -r requirements_test.txt
    - pytest -vv --numprocesses=auto --cov --cov-config=.coveragerc --cov-report=term-missing tests

test:3.6:
  image: python:3.6-stretch
  stage: test
  services:
    - docker:dind
  before_script:
    - curl -fsSL https://get.docker.com | bash
    - pip install --no-use-pep517 -e  .
  script:
    - pip install -r requirements_test.txt
    - pytest -vv --numprocesses=auto --cov --cov-config=.coveragerc --cov-report=term-missing tests

test:3.7:
  image: python:3.7-stretch
  stage: test
  services:
    - docker:dind
  before_script:
    - curl -fsSL https://get.docker.com | bash
    - pip install --no-use-pep517 -e  .
  script:
    - pip install -r requirements_test.txt
    - pytest -vv --numprocesses=auto --cov --cov-config=.coveragerc --cov-report=term-missing tests

docs:
  # for now, this is just for testing that doc generator works
  stage: test
  services: []
  before_script:
    - pip install --no-use-pep517 -e .
    - pip install -r requirements_docs.txt
  script:
    - cd docs
    - make html
    - mv _build/html ../html_docs
  artifacts:
      paths:
        - html_docs

check_build:
  stage: test
  services: []
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - twine check dist/*
  except:
    - master
    - tags


deploy_staging:
  stage: deploy
  only:
    - master
  except:
    - tags
  variables:
    TWINE_USERNAME: $STAGING_USERNAME
    TWINE_PASSWORD: $STAGING_PASSWORD
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - twine check dist/*
    - twine upload --repository-url $TEST_PYPI_REPOSITORY_URL --verbose dist/*

deploy_prod:
  stage: deploy
  only:
    - tags
  variables:
    TWINE_USERNAME: $PRODUCTION_USERNAME
    TWINE_PASSWORD: $PRODUCTION_PASSWORD
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - twine check dist/*
    - twine upload dist/*
