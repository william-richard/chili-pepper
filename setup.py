import os
import subprocess

import setuptools
"""
taken from
http://blogs.nopcode.org/brainstorm/2013/05/20/pragmatic-python-versioning-via-setuptools-and-git-tags/
Fetch version from git tags, and write to version.py.
Also, when git is not available (PyPi package), use stored version.py.
"""
version_py = os.path.join(os.path.dirname(__file__), 'version.py')

try:
    version_git = subprocess.check_output(['git', 'describe', '--tags']).decode().rstrip()
except Exception:
    with open(version_py, 'r') as fh:
        version_git = fh.read().strip().split('=')[-1].replace('"', '')

version_msg = '# Do not edit this file, pipeline versioning is governed by git tags'
with open(version_py, 'w') as fh:
    fh.write(version_msg + os.linesep + "__version__ = '" + str(version_git) + "'" + os.linesep)

setuptools.setup(
    name='kale',
    version='{ver}'.format(ver=version_git),
    author='Example Author',
    author_email='author@example.com',
    description='A small example package',
    long_description='A longer description',
    long_description_content_type='text/markdown',
    packages=setuptools.find_packages(),
    install_requires=[
        'awacs',
        'pathlib2',
        'troposphere',
    ],
    url='https://github.com/pypa/sampleproject',
    classifiers=[
        'Programming Language :: Python :: 3',
        'License :: OSI Approved :: MIT License',
        'Operating System :: OS Independent',
    ],
)
